# This is a basic workflow to help you get started with Actions

name: Build XMRig

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
  - cron: "0 13 * * 1"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build ${{ matrix.repo }} on x86/arm v${{ matrix.arm_target }} 
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arm_target: ['0', '7', '8']
        repo: [xmrig/xmrig, C3Pool/xmrig-C3]
        
    steps:
      - name: Switch to root
        run: |
          sudo su
      
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          
      - name: Echo XMRig version
        run: |
          echo "XMRIG_VERSION="`cat src/version.h | grep -Eo "APP_VERSION\s+\"(.+?)\"" | awk -F "\"" '{print $2}'`
          echo "XMRIG_VERSION="`cat src/version.h | grep -Eo "APP_VERSION\s+\"(.+?)\"" | awk -F "\"" '{print $2}'` >> $GITHUB_ENV

      - name: Setup environment
        run: |
          apt update
          apt install build-essential cmake automake libtool autoconf
          
      - name: Full static compile x86
        if: matrix.arm_target == '0'
        run: |
          mkdir build && cd scripts
          ./bash build_deps.sh && cd ../build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DXMRIG_DEPS=scripts/deps
          make -j$(nproc)
          
      - name: Full static compile arm
        if: matrix.arm_target != '0'
        run: |
          mkdir build && cd scripts
          ./bash build_deps.sh && cd ../build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DARM_TARGET=${{ matrix.arm_target }} -DWITH_OPENCL=OFF -DWITH_CUDA=OFF -DWITH_HWLOC=OFF -DWITH_ASM=OFF -DXMRIG_DEPS=scripts/deps
          make -j$(nproc)
          
